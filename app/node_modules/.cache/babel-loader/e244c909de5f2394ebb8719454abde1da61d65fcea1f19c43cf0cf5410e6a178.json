{"ast":null,"code":"var _jsxFileName = \"/home/bmzi/Dev/projects/quiz/app/src/components/NextButton.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuiz } from \"../contexts/QuizContext\";\n// import Description from \"./Description\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NextButton() {\n  _s();\n  const {\n    dispatch,\n    answer,\n    index,\n    numQuestions\n  } = useQuiz();\n  if (answer === null) return null;\n  if (index < numQuestions - 1) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-ui\",\n      onClick: () => dispatch({\n        type: \"nextQuestion\"\n      }),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n  if (index === numQuestions - 1) return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-ui\",\n    onClick: () => dispatch({\n      type: \"finish\"\n    }),\n    children: \"Finish\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n_s(NextButton, \"YUeAfs07kIMCvLwtF6rPtV8V/vI=\", false, function () {\n  return [useQuiz];\n});\n_c = NextButton;\nfunction Description() {\n  _s2();\n  var _questions$at;\n  const {\n    questions,\n    index\n  } = useQuiz();\n\n  // Assuming each question is an object and the rich text is stored in a `description` field\n  const questionDescription = ((_questions$at = questions.at(index)) === null || _questions$at === void 0 ? void 0 : _questions$at.description) || \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"description\",\n    dangerouslySetInnerHTML: {\n      __html: questionDescription\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s2(Description, \"/eQxoAlPGi11MonazjQm7TIebR4=\", false, function () {\n  return [useQuiz];\n});\n_c2 = Description;\nexport default NextButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"NextButton\");\n$RefreshReg$(_c2, \"Description\");","map":{"version":3,"names":["useQuiz","jsxDEV","_jsxDEV","NextButton","_s","dispatch","answer","index","numQuestions","children","className","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","Description","_c","_s2","_questions$at","questions","questionDescription","at","description","dangerouslySetInnerHTML","__html","_c2","$RefreshReg$"],"sources":["/home/bmzi/Dev/projects/quiz/app/src/components/NextButton.js"],"sourcesContent":["import { useQuiz } from \"../contexts/QuizContext\";\n// import Description from \"./Description\";\n\nfunction NextButton() {\n  const { dispatch, answer, index, numQuestions } = useQuiz();\n  if (answer === null) return null;\n\n  if (index < numQuestions - 1)\n    return (\n      <div>\n        <button\n          className=\"btn btn-ui\"\n          onClick={() => dispatch({ type: \"nextQuestion\" })}\n        >\n          Next\n        </button>\n        <Description />\n      </div>\n    );\n\n  if (index === numQuestions - 1)\n    return (\n      <button\n        className=\"btn btn-ui\"\n        onClick={() => dispatch({ type: \"finish\" })}\n      >\n        Finish\n      </button>\n    );\n}\n\nfunction Description() {\n  const { questions, index } = useQuiz();\n\n  // Assuming each question is an object and the rich text is stored in a `description` field\n  const questionDescription = questions.at(index)?.description || \"\";\n\n  return (\n    <div\n      className=\"description\"\n      dangerouslySetInnerHTML={{ __html: questionDescription }}\n    />\n  );\n}\n\nexport default NextButton;\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,yBAAyB;AACjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC3D,IAAIM,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;EAEhC,IAAIC,KAAK,GAAGC,YAAY,GAAG,CAAC,EAC1B,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MACEQ,SAAS,EAAC,YAAY;MACtBC,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;QAAEO,IAAI,EAAE;MAAe,CAAC,CAAE;MAAAH,QAAA,EACnD;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTd,OAAA,CAACe,WAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;EAGV,IAAIT,KAAK,KAAKC,YAAY,GAAG,CAAC,EAC5B,oBACEN,OAAA;IACEQ,SAAS,EAAC,YAAY;IACtBC,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;MAAEO,IAAI,EAAE;IAAS,CAAC,CAAE;IAAAH,QAAA,EAC7C;EAED;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEf;AAACZ,EAAA,CA1BQD,UAAU;EAAA,QACiCH,OAAO;AAAA;AAAAkB,EAAA,GADlDf,UAAU;AA4BnB,SAASc,WAAWA,CAAA,EAAG;EAAAE,GAAA;EAAA,IAAAC,aAAA;EACrB,MAAM;IAAEC,SAAS;IAAEd;EAAM,CAAC,GAAGP,OAAO,CAAC,CAAC;;EAEtC;EACA,MAAMsB,mBAAmB,GAAG,EAAAF,aAAA,GAAAC,SAAS,CAACE,EAAE,CAAChB,KAAK,CAAC,cAAAa,aAAA,uBAAnBA,aAAA,CAAqBI,WAAW,KAAI,EAAE;EAElE,oBACEtB,OAAA;IACEQ,SAAS,EAAC,aAAa;IACvBe,uBAAuB,EAAE;MAAEC,MAAM,EAAEJ;IAAoB;EAAE;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEN;AAACG,GAAA,CAZQF,WAAW;EAAA,QACWjB,OAAO;AAAA;AAAA2B,GAAA,GAD7BV,WAAW;AAcpB,eAAed,UAAU;AAAC,IAAAe,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}